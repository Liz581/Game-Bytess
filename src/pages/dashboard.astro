---
import { app } from "../firebase/server";
import Layout from "../layouts/Layout.astro";
import { getFirestore } from "firebase-admin/firestore";
// import { getAuth } from "firebase-admin/auth";

// const auth = getAuth(app);

interface Recipe {
  id: string;
  name: string;
  game: string;
  description: string;
  ingredients: string;
  steps: string
  imageURL: string;
}

/* Check current session + display recipes */

const db = getFirestore(app);
const recipesRef = db.collection("recipes");
const recipesSnapshot = await recipesRef.get();
const recipes = recipesSnapshot.docs.map((doc) => ({
  id: doc.id,
  ...doc.data(),
})) as Recipe[];

// const sessionCookie = Astro.cookies.get('session')?.value
// const sessionCookie = Astro.cookies.get('session')?.value
// let user
// // TODO Retrieve the session cookie and verify it
// // Use Firebase verifySessionCookie method to verify the session cookie

// if (sessionCookie) {
//     const decodedCookie = await auth.verifySessionCookie(sessionCookie)

//     // Get the user details from the decoded cookie
//     user = await auth.getUser(decodedCookie.uid)

//     // TODO If the user is not found, redirect the user to the signin page
//     if (!user) return Astro.redirect('/signin')
// }
---

<Layout title="dashboard">
  <!-- <h1>Welcome {user.displayName}</h1> -->
  <h3>We are happy to see you here</h3>
  <a href={`/add`}>Add New Recipe</a>
  <h4>Recipes</h4>
  <ul>
    {
      recipes.map((recipe) => (
        <li>
          <a href={`/recipe/${recipe.id}`}>{recipe.name}</a>
          <span>({recipe.game})</span>
          <a href={`/edit/${recipe.id}`}>Edit</a>
        </li>
      ))
    }
  </ul>

  <form action="/api/auth/signout">
    <button type="submit">Sign out</button>
  </form>
</Layout>
