---
import Layout from "../layouts/Layout.astro";
import { app } from "../firebase/server";
import { getAuth } from "firebase-admin/auth";

const auth = getAuth(app);
let user = null;

const sessionCookie = Astro.cookies.get('__session')?.value;

if (sessionCookie) {
  const decodedCookie = await auth.verifySessionCookie(sessionCookie);
  user = await auth.getUser(decodedCookie.uid);
}
---

<!-- Update this to fit with the recipes that people can make their own and post it, we can stick with url but if they don't have a url then we need to find a way to upload images -->

<Layout title="Add a New Remix Recipe">
  <h1>Add Your Remix Recipe</h1>
  <a href="/dashboard" class="go-back-button">back</a>
  <div class="add-form">
    <form method="post" action="/api/remixes">
      <label for="recipe">Recipe</label>
      <input type="text" id="recipe" name="recipe" placeholder="Write the Correct Recipe" readonly/>
      <label for="user">User</label>
      <input type="text" id="user" name="user" value={user?.displayName} placeholder="Type your Username" readonly/>
      <label for="comment">What Did You Change?</label>
      <input type="text" id="comment" name="comment" placeholder="Used cream cheese instead of frosting." required/>
      <label for="imageURL">Image URL</label>
      <input type="text" id="imageURL" name="imageURL" placeholder="https://cake_picture.png" required/>
      <button type="submit">Add Recipe Remix</button>
    </form>
  </div>
  <script>
    const recipe = new URLSearchParams(window.location.search).get('recipe');

    const recipeInput = document.getElementById('recipe') as HTMLInputElement;
    if (recipeInput && recipe) {
      recipeInput.value = recipe;
    }
  </script>
</Layout>
<style>
  .add-form {
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      padding: 2rem;
      border-radius: 8px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      width: 100%;
      max-width: 400px;
      margin: auto;
      background-color: #ffffff;
  }

  .add-form input {
        width: 100%;
        padding: 0.75rem;
        margin-bottom: 1rem;
        border: 1px solid #ddd;
        border-radius: 4px;
        font-size: 1rem;
    }

    /* Style the submit button */
  .add-form button {
        width: 100%;
        padding: 0.75rem;
        background-color: #0f0f0f;
        color: #ffffff;
        border: none;
        border-radius: 4px;
        font-size: 1rem;
        cursor: pointer;
        transition: background-color 0.3s ease;
        margin-top: 1rem;
    }

    .add-form button:disabled {
        background-color: #ffffff;
    }

    .add-form button:hover:not(:disabled) {
        background-color: rgb(36, 90, 238);
        transition: background-color 0.3s ease;
    }

    .add-form header {
        font-size: 1.5rem;
        margin-bottom: 1rem;
    }

    .add-form label {
      font-family: 'Nunito';
        font-size: 25px;
        margin-bottom: 0rem;
    }
  .go-back-button {
    display: inline-block;
    padding: 10px 20px;
    background-color: #007bff;
    color: white;
    text-decoration: none;
    border-radius: 5px;
  }

  .go-back-button:hover {
    background-color: #0056b3;
  }

  input[readonly] {
    background-color: #d4d4d4;  /* Darken the background */
    border: 1px solid #333;  /* Optional: Dark border to make it stand out */
    cursor: not-allowed;     /* Change cursor to indicate the field is readonly */
  }
</style>